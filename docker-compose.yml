version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: cryptokey_db_2
      POSTGRES_USER: cryptokey_user_2
      POSTGRES_PASSWORD: GioTest123
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - cryptokey_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager

  web:
    build:
      context: ./cryptokey_project2
    command: /app/wait_for_db.sh python manage.py runserver 0.0.0.0:8000
    environment:
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: GioTest123
      DJANGO_SUPERUSER_EMAIL: admin@example.com
      POSTGRES_DB: cryptokey_db_2
      POSTGRES_USER: cryptokey_user_2
      POSTGRES_PASSWORD: GioTest123
      POSTGRES_HOST: db  
    networks:
      - cryptokey_network
    ports:
      - "8000:8000"
    depends_on:
      - db
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

  frontend:
    build:
      context: ./crypto_key
      args:
        API_URL: "http://cryptokey.lebourbier.be:8000/api"
    ports:
      - "80:80"
    networks:
      - cryptokey_network
    depends_on:
      - web
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker

networks:
  cryptokey_network:

volumes:
  postgres_data:
