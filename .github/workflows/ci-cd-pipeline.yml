name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  scan-with-trivy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build Docker image for crypto_key
        run: docker build -t myapp-trivy-crypto-key ./crypto_key

      - name: Build Docker image for cryptokey_project2
        run: docker build -t myapp-trivy-cryptokey-project2 ./cryptokey_project2

      - name: Scan Docker image with Trivy (crypto_key)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: myapp-trivy-crypto-key
          format: 'json'
          output: 'trivy-results-crypto_key.json'

      - name: Upload Trivy scan results for crypto_key
        uses: actions/upload-artifact@v3
        with:
          name: trivy-scan-results-crypto_key
          path: trivy-results-crypto_key.json

      - name: Scan Docker image with Trivy (cryptokey_project2)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: myapp-trivy-cryptokey-project2
          format: 'json'
          output: 'trivy-results-cryptokey_project2.json'

      - name: Upload Trivy scan results for cryptokey_project2
        uses: actions/upload-artifact@v3
        with:
          name: trivy-scan-results-cryptokey_project2
          path: trivy-results-cryptokey_project2.json

  scan-with-owasp-zap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: sudo apt-get install -y docker-compose

      - name: Run web application
        run: docker-compose up -d

      - name: Scan with OWASP ZAP
        uses: zaproxy/action-full-scan@v0.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://localhost:8000'
          format: 'html'
          report-path: 'zap-report.html'

      - name: Upload ZAP scan results
        uses: actions/upload-artifact@v3
        with:
          name: zap-scan-results
          path: zap-report.html

  scan-with-bandit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        run: bandit -r ./cryptokey_project2 -o bandit_report.json -f json --exit-zero

      - name: Upload Bandit results
        uses: actions/upload-artifact@v3
        with:
          name: bandit-results
          path: bandit_report.json

  scan-with-flake8:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  

      - name: Install Flake8
        run: pip install flake8

      - name: Run Flake8
        run: flake8 ./cryptokey_project2 --exit-zero > flake8_report.txt

      - name: Upload Flake8 results
        uses: actions/upload-artifact@v3
        with:
          name: flake8-results
          path: flake8_report.txt

  scan-with-flutter-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@vmaster

      - name: Install Flutter manually
        run: |
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          export PATH="$PATH:`pwd`/flutter/bin"
          flutter doctor

      - name: Run Flutter Analyze
        run: flutter analyze ./path_to_your_flutter_project > flutter_analyze_report.txt

      - name: Upload Flutter Analyze results
        uses: actions/upload-artifact@v3
        with:
          name: flutter-analyze-results
          path: flutter_analyze_report.txt
